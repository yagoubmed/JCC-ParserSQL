/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mm;
import net.sf.jsqlparser.parser.CCJSqlParserManager;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Base64;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.Document;
import javax.swing.text.Element;
import net.sf.jsqlparser.JSQLParserException;

/**
 *
 * @author LENOVO
 */
public class Server extends javax.swing.JFrame {
     static ServerSocket ss;
     static Socket s;
     static DataInputStream din;
     static DataOutputStream dout;

    private static boolean Creation(String sql) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    Connection con=null;
     PreparedStatement pst = null;
      ResultSet rs = null;  
     String name,salary,id;
    // int id;
   
    private CCJSqlParserManager parserManager = new CCJSqlParserManager();

     
    public Server() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mes_a = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        mes_c = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mes_r = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PROXY");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        mes_a.setColumns(20);
        mes_a.setRows(5);
        mes_a.setMaximumSize(new java.awt.Dimension(104, 80));
        jScrollPane1.setViewportView(mes_a);

        jPanel2.setBackground(new java.awt.Color(0, 153, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fin/icon/cloud-computing (1).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Proxy Program");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("With Javacc ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(72, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 102));
        jLabel4.setText("The encrypted request");

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 102));
        jLabel5.setText("The request received");

        mes_c.setColumns(20);
        mes_c.setRows(5);
        jScrollPane3.setViewportView(mes_c);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        mes_r.setColumns(20);
        mes_r.setRows(5);
        jScrollPane2.setViewportView(mes_r);

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 102));
        jLabel6.setText("The results received");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 153, 102));
        jButton1.setText("Clear All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(18, 18, 18))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                 mes_a.selectAll();
                mes_a.replaceSelection("");
                mes_c.selectAll();
                mes_c.replaceSelection("");
                mes_r.selectAll();
                mes_r.replaceSelection("");
    }//GEN-LAST:event_jButton1ActionPerformed
     //----------------------------- --------------------------------------
  static int k_k=2333,k_p=211;
    
    public static String  crp(String s){
         NewClass3 n=new NewClass3(Base64.getEncoder().encodeToString(s.getBytes()));
		String en=n.encrypting(k_k,k_p);
		//System.out.println("Encryption is :"+en);
                return en;
    }
       public static String  decrp(String s){
          
           NewClass3 nc=new NewClass3(s);
		String de=nc.dercrypting(k_k,k_p);
                //System.out.println("Decryptin is:"+de);
                return new String (Base64.getDecoder().decode(de));
       }
    
    
//------------------------- crp long --------------------------------
       public static long  crp_long(long value){
         
           Random rnd = new Random();
           long randlong = (value * k_k)%(k_p *k_p);
           long c=(value + randlong * k_p)%(k_p * k_p) + (value * k_k * k_k);
           return c;
    }
   
 //---------------------- decrp long ------------------------------------
       
        public static long  decrp_long(long c){
         
           Random rnd = new Random();
           int g=k_k*k_k;
           long a= c % g ;
           long m=(a)%(k_p);
           return m;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
        String msgin="";
        String P_sql = null;
        String sql;
        try{
            
            ss= new ServerSocket(1201);
            s=ss.accept();
            din=new DataInputStream(s.getInputStream());
            dout=new DataOutputStream(s.getOutputStream());
            
            while(!msgin.equals("exit")){
                msgin=din.readUTF();
                mes_a.append(mes_a.getText().trim()+"\n"+msgin);
                
                
                
                
                 //-------------- Read the sql Statement -------------------------------------------
            
            Document doc = mes_a.getDocument();
             Element root = doc.getDefaultRootElement();
             //Element element0 = root.getElement(0);
             Element element1 = root.getElement(1);
             //int start0 = element0.getStartOffset();
             //int end0 = element0.getEndOffset();
             int start1 = element1.getStartOffset();
             int end1 = element1.getEndOffset();
                      
                       
             //-------------   Execute a query  -----------------------------
                        
             sql= doc.getText(start1, end1 - start1);
             System.out.println("sql : "+ sql);
             
             P_sql= sql.substring(0, 6);
             
            System.out.println("premier mot : "+ P_sql);
            
            switch (P_sql) {
                         case "CREATE":
                                      System.out.println(" rani fi swith CREATE");
                                      create c=new create();
                                      String SQL_Cryp= c.Creation(sql);
                                      mes_c.append(SQL_Cryp);
                                      mes_r.append(" Created Successfully.. ");
                                     
                                       break;
                         case "INSERT":
                                     System.out.println("Here swith INSERT");
                                     insert i=new insert();
                                      String SQL_Cryp_I= i.Insert(sql);
                                      System.out.println("sql_crypt: "+SQL_Cryp_I);
                                      mes_c.append(SQL_Cryp_I);
                                      mes_r.append(" Inserted Successfully ..");
                                     
                                     break;
                         case "UPDATE":
                                      System.out.println("Here UPDATE");
                                      update u=new update();
                                      String SQL_Cryp_U= u.Update(sql);
                                      System.out.println("sql_crypt"+SQL_Cryp_U);
                                      mes_c.append(SQL_Cryp_U);
                                      mes_r.append(" Updated Successfully ..");
                                     break;
                         case "DELETE":
                                      System.out.println("rani fi swith DELETE");
                                      delete d=new delete();
                                      String SQL_Cryp_D= d.Delete(sql);
                                      System.out.println("sql_crypt"+SQL_Cryp_D);
                                      mes_c.append(SQL_Cryp_D);
                                      mes_r.append(" Deleted Successfully ..");
                                     break;
                         case "SELECT":
                                     System.out.println("Here switch SELECT");
                           if(sql.contains("SUM")){
                                     System.out.println("Here Select SUM : Contains");
                                        select_sum ss=new select_sum();
                                        System.out.println("Here Contains ");
                                        ss.Select_sum(sql);
                                        mes_c.append(ss.SQL_Crpyt);
                                        mes_r.append(String.valueOf(ss.decrpt_Result)); 
                            }else{
                                    if(sql.contains("Order")){
                                            System.out.println(" here Order by ");
                                            select_order so=new select_order();
                                            String data[] =so.Select_order(sql);
                                            mes_c.append(data[0]); 
                                             int ii=so.count;int y=1;
                                             System.out.println("ii=  "+ii);
                                             while (y<=ii){
                                             mes_r.append(data[y]);
                                             y++;
                                             }
                                    }else{
                                        if(sql.contains("WHERE") && !(sql.contains("Order"))){ 
                                            System.out.println(" here select normal ");
                                            
                                            System.out.println(" here select WHERE ");
                                            select_where sw=new select_where();
                                            String data[] =sw.Select_where(sql);
                                            mes_c.append(data[0]); 
                                            int ii=sw.count;
                                             int y=1;
                                             System.out.println("ii=  "+ii);
                                             while (y<=ii){
                                             mes_r.append(data[y]);
                                             y++;
                                             }
                                        }else{
                                            System.out.println(" here select whithout WHERE ");
                                            select s=new select();
                                            s.Select(sql);
                                            System.out.println(" here select whithout WHERE :");
                                            mes_c.append(s.SQL_Crpyt); 
//                                            mes_r.append(s.list_result);
                                             int ii=s.count;
                                             int y=0;
                                             System.out.println("ii=  "+ii);
                                             while (y<=ii){
                                             mes_r.append(s.data[y]);
                                             y++;
                                             }
                                             } 
                                     }
                           }
            
                                     break;
            }
          
            }
            
          } catch (Exception e) {
        
        }
    }
            
       
    
       
                
        
         
 
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTextArea mes_a;
    private static javax.swing.JTextArea mes_c;
    private static javax.swing.JTextArea mes_r;
    // End of variables declaration//GEN-END:variables

    private void doStuffWithLine(String line) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void processLine(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void where(boolean next) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void WHERE(boolean next) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
     }
